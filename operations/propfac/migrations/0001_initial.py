# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import django.db.models.deletion
from django.conf import settings


class Migration(migrations.Migration):

    dependencies = [
        ('employees', '0001_initial'),
        ('offices', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalLeaseAgreement',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('office_space', models.CharField(default=None, max_length=200, null=True, blank=True)),
                ('rental_amount', models.FloatField(default=0, max_length=20, null=True, blank=True)),
                ('surety', models.BooleanField(default=False)),
                ('deposit', models.FloatField(default=0, max_length=20, null=True, blank=True)),
                ('surety_deposit', models.FloatField(default=0, max_length=20, null=True, blank=True)),
                ('electricity_deposit', models.FloatField(default=0, max_length=20, null=True, blank=True)),
                ('electricity', models.CharField(default=None, max_length=200, null=True, blank=True, choices=[(b'Eskom', b'Eskom'), (b'Pre-Paid', b'Pre-Paid'), (b'PEC', b'PEC Metering'), (b'Municipal', b'Municipal')])),
                ('current_leasee', models.CharField(default=None, max_length=200, null=True, blank=True)),
                ('leasor', models.CharField(default=b'Pending', max_length=200, null=True, blank=True)),
                ('lease_expiry_date', models.DateField(null=True, blank=True)),
                ('notice_term', models.CharField(default=None, max_length=200, null=True, blank=True)),
                ('contact_person', models.CharField(default=None, max_length=200, null=True, blank=True)),
                ('status', models.CharField(default=b'Operational', max_length=20, null=True, blank=True, choices=[(b'Operational', b'Operational'), (b'Pending Closure', b'Pending Closure'), (b'Closed', b'Closed')])),
                ('exit_clause_sent', models.BooleanField(default=False)),
                ('accept', models.BooleanField(default=False)),
                ('authorize', models.CharField(default=b'Pending', max_length=20, null=True, blank=True, choices=[(b'Pending', b'Pending'), (b'Aproved', b'Authorize'), (b'Declined', b'Decline')])),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('branch', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='offices.Branch', null=True)),
                ('created_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('modified_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical lease agreement',
            },
        ),
        migrations.CreateModel(
            name='HistoricalLeaseAgreementRenewal',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('expiry_date', models.DateField(null=True, blank=True)),
                ('renewal_date', models.DateField(null=True, blank=True)),
                ('rental_amount', models.FloatField(default=0, max_length=20, null=True, blank=True)),
                ('new_expiry_date', models.DateField(null=True, blank=True)),
                ('accept', models.BooleanField(default=False)),
                ('authorize', models.CharField(default=b'Pending', max_length=20, null=True, blank=True, choices=[(b'Pending', b'Pending'), (b'Aproved', b'Authorize'), (b'Declined', b'Decline')])),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('branch', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='offices.Branch', null=True)),
                ('created_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('modified_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical lease agreement renewal',
            },
        ),
        migrations.CreateModel(
            name='HistoricalOfficeInspection',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('date_checked', models.DateField(null=True, blank=True)),
                ('time_checked', models.TimeField(null=True, blank=True)),
                ('walls_and_covering', models.BooleanField(default=False)),
                ('windows_and_handles', models.BooleanField(default=False)),
                ('blinds', models.BooleanField(default=False)),
                ('ceiling', models.BooleanField(default=False)),
                ('lights_and_switches', models.BooleanField(default=False)),
                ('doors_and_handles', models.BooleanField(default=False)),
                ('air_conditioner', models.BooleanField(default=False)),
                ('furniture', models.BooleanField(default=False)),
                ('fire_extinguisher', models.BooleanField(default=False)),
                ('white_board', models.BooleanField(default=False)),
                ('overhead_projector', models.BooleanField(default=False)),
                ('appliances', models.BooleanField(default=False)),
                ('shelving', models.BooleanField(default=False)),
                ('status', models.CharField(default=None, max_length=20, null=True, blank=True, choices=[(b'Good Condition', b'Good Condition'), (b'Minor Damages', b'Minor Damages'), (b'Major Damages', b'Major Damages')])),
                ('accept', models.BooleanField(default=False)),
                ('authorize', models.CharField(default=b'Pending', max_length=20, null=True, blank=True, choices=[(b'Pending', b'Pending'), (b'Aproved', b'Authorize'), (b'Declined', b'Decline')])),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('branch', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='offices.Branch', null=True)),
                ('created_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('floor', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='offices.Floor', null=True)),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('inspector', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='employees.Employee', null=True)),
                ('modified_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('section', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='offices.Section', null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical office inspection',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPFComment',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('comments', models.CharField(default=None, max_length=2000)),
                ('commented', models.DateTimeField(editable=False, blank=True)),
                ('comment_type', models.CharField(default=None, max_length=120, null=True, blank=True)),
                ('obj_id', models.IntegerField(null=True, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('branch', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='offices.Branch', null=True)),
                ('created_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical pf comment',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPFDocument',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('file_name', models.CharField(max_length=255, blank=True)),
                ('file', models.TextField(max_length=100)),
                ('obj_id', models.CharField(default=None, max_length=20, null=True, blank=True)),
                ('obj_type', models.CharField(default=None, max_length=50, null=True, blank=True)),
                ('date_uploaded', models.DateTimeField(editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('branch', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='offices.Branch', null=True)),
                ('created_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical pf document',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPFRequisition',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('quote_number', models.CharField(default=None, max_length=120)),
                ('obj_id', models.IntegerField(null=True, blank=True)),
                ('requisition_type', models.CharField(default=None, max_length=120)),
                ('description', models.CharField(default=None, max_length=2000, null=True, blank=True)),
                ('requested', models.DateTimeField(editable=False, blank=True)),
                ('supplier', models.CharField(default=None, max_length=120)),
                ('vat_included', models.BooleanField(default=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('branch', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='offices.Branch', null=True)),
                ('created_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('modified_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('requested_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='employees.Employee', null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical pf requisition',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPFRequisitionItem',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('item_code', models.CharField(default=None, max_length=200, null=True, blank=True)),
                ('line_item', models.CharField(default=None, max_length=200, null=True, blank=True)),
                ('qty', models.IntegerField(null=True, blank=True)),
                ('unit_price', models.FloatField(default=0, max_length=20, null=True, blank=True)),
                ('line_total', models.FloatField(default=0, max_length=20, null=True, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('created_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('modified_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical pf requisition item',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPropertyMaintenance',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('maint_date', models.DateField(null=True, blank=True)),
                ('maintenance_type', models.CharField(default=None, max_length=20, null=True, blank=True, choices=[(b'General', b'General'), (b'Air Conditioning', b'Air Conditioning'), (b'Electrical', b'Elecriical'), (b'Floor Capets and Tiling', b'Floor Capets and Tiling'), (b'Plumbing', b'Plumbing'), (b'Security', b'Security'), (b'Walls And Partitioning', b'Walls And Partitioning')])),
                ('description', models.CharField(default=None, max_length=2000, null=True, blank=True)),
                ('projected_cost', models.FloatField(default=0, max_length=20, null=True, blank=True)),
                ('actual_cost', models.FloatField(default=0, max_length=20, null=True, blank=True)),
                ('difference', models.FloatField(default=0, max_length=20, null=True, blank=True)),
                ('invoice_number', models.CharField(default=None, max_length=200, null=True, blank=True)),
                ('service_provider', models.CharField(default=None, max_length=200, null=True, blank=True)),
                ('status', models.CharField(default=None, max_length=20, null=True, blank=True, choices=[(b'Good Condition', b'Good Condition'), (b'Minor Damages', b'Minor Damages'), (b'Major Damages', b'Major Damages'), (b'Write Off', b'Write Off')])),
                ('accept', models.BooleanField(default=False)),
                ('authorize', models.CharField(default=b'Pending', max_length=20, null=True, blank=True, choices=[(b'Pending', b'Pending'), (b'Aproved', b'Authorize'), (b'Declined', b'Decline')])),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('branch', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='offices.Branch', null=True)),
                ('created_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('modified_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical property maintenance',
            },
        ),
        migrations.CreateModel(
            name='HistoricalToiletInspection',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('toilet', models.CharField(default=None, max_length=20, null=True, blank=True, choices=[(b'gents', b'Gents'), (b'ladies', b'Ladies')])),
                ('date_checked', models.DateField(null=True, blank=True)),
                ('time_checked', models.TimeField(null=True, blank=True)),
                ('walls_and_covering', models.BooleanField(default=False)),
                ('windows_and_handles', models.BooleanField(default=False)),
                ('ceiling', models.BooleanField(default=False)),
                ('lights_and_switches', models.BooleanField(default=False)),
                ('doors_and_hanles', models.BooleanField(default=False)),
                ('air_extractor', models.BooleanField(default=False)),
                ('seat_and_cover', models.BooleanField(default=False)),
                ('urinary', models.BooleanField(default=False)),
                ('water_dispenser', models.BooleanField(default=False)),
                ('washing_basin', models.BooleanField(default=False)),
                ('taps', models.BooleanField(default=False)),
                ('towel_dispencer', models.BooleanField(default=False)),
                ('detegent_dispencer', models.BooleanField(default=False)),
                ('mirror', models.BooleanField(default=False)),
                ('furniture', models.BooleanField(default=False)),
                ('fire_extinguisher', models.BooleanField(default=False)),
                ('shelving', models.BooleanField(default=False)),
                ('status', models.CharField(default=None, max_length=20, null=True, blank=True, choices=[(b'Good Condition', b'Good Condition'), (b'Minor Damages', b'Minor Damages'), (b'Major Damages', b'Major Damages')])),
                ('accept', models.BooleanField(default=False)),
                ('authorize', models.CharField(default=b'Pending', max_length=20, null=True, blank=True, choices=[(b'Pending', b'Pending'), (b'Aproved', b'Authorize'), (b'Declined', b'Decline')])),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('branch', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='offices.Branch', null=True)),
                ('created_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('floor', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='offices.Floor', null=True)),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('inspector', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='employees.Employee', null=True)),
                ('modified_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical toilet inspection',
            },
        ),
        migrations.CreateModel(
            name='LeaseAgreement',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('office_space', models.CharField(default=None, max_length=200, null=True, blank=True)),
                ('rental_amount', models.FloatField(default=0, max_length=20, null=True, blank=True)),
                ('surety', models.BooleanField(default=False)),
                ('deposit', models.FloatField(default=0, max_length=20, null=True, blank=True)),
                ('surety_deposit', models.FloatField(default=0, max_length=20, null=True, blank=True)),
                ('electricity_deposit', models.FloatField(default=0, max_length=20, null=True, blank=True)),
                ('electricity', models.CharField(default=None, max_length=200, null=True, blank=True, choices=[(b'Eskom', b'Eskom'), (b'Pre-Paid', b'Pre-Paid'), (b'PEC', b'PEC Metering'), (b'Municipal', b'Municipal')])),
                ('current_leasee', models.CharField(default=None, max_length=200, null=True, blank=True)),
                ('leasor', models.CharField(default=b'Pending', max_length=200, null=True, blank=True)),
                ('lease_expiry_date', models.DateField(null=True, blank=True)),
                ('notice_term', models.CharField(default=None, max_length=200, null=True, blank=True)),
                ('contact_person', models.CharField(default=None, max_length=200, null=True, blank=True)),
                ('status', models.CharField(default=b'Operational', max_length=20, null=True, blank=True, choices=[(b'Operational', b'Operational'), (b'Pending Closure', b'Pending Closure'), (b'Closed', b'Closed')])),
                ('exit_clause_sent', models.BooleanField(default=False)),
                ('accept', models.BooleanField(default=False)),
                ('authorize', models.CharField(default=b'Pending', max_length=20, null=True, blank=True, choices=[(b'Pending', b'Pending'), (b'Aproved', b'Authorize'), (b'Declined', b'Decline')])),
                ('branch', models.ForeignKey(related_name='branch_leaseagreements', to='offices.Branch')),
                ('created_by', models.ForeignKey(related_name='user_leaseagreements', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('modified_by', models.ForeignKey(related_name='user_modified_leaseagreements', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LeaseAgreementRenewal',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('expiry_date', models.DateField(null=True, blank=True)),
                ('renewal_date', models.DateField(null=True, blank=True)),
                ('rental_amount', models.FloatField(default=0, max_length=20, null=True, blank=True)),
                ('new_expiry_date', models.DateField(null=True, blank=True)),
                ('accept', models.BooleanField(default=False)),
                ('authorize', models.CharField(default=b'Pending', max_length=20, null=True, blank=True, choices=[(b'Pending', b'Pending'), (b'Aproved', b'Authorize'), (b'Declined', b'Decline')])),
                ('branch', models.ForeignKey(related_name='branch_leaseagreement_renewals', to='offices.Branch')),
                ('created_by', models.ForeignKey(related_name='user_leaseagreementrenewals', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('modified_by', models.ForeignKey(related_name='user_modified_leaseagreementrenewals', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OfficeInspection',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('date_checked', models.DateField(null=True, blank=True)),
                ('time_checked', models.TimeField(null=True, blank=True)),
                ('walls_and_covering', models.BooleanField(default=False)),
                ('windows_and_handles', models.BooleanField(default=False)),
                ('blinds', models.BooleanField(default=False)),
                ('ceiling', models.BooleanField(default=False)),
                ('lights_and_switches', models.BooleanField(default=False)),
                ('doors_and_handles', models.BooleanField(default=False)),
                ('air_conditioner', models.BooleanField(default=False)),
                ('furniture', models.BooleanField(default=False)),
                ('fire_extinguisher', models.BooleanField(default=False)),
                ('white_board', models.BooleanField(default=False)),
                ('overhead_projector', models.BooleanField(default=False)),
                ('appliances', models.BooleanField(default=False)),
                ('shelving', models.BooleanField(default=False)),
                ('status', models.CharField(default=None, max_length=20, null=True, blank=True, choices=[(b'Good Condition', b'Good Condition'), (b'Minor Damages', b'Minor Damages'), (b'Major Damages', b'Major Damages')])),
                ('accept', models.BooleanField(default=False)),
                ('authorize', models.CharField(default=b'Pending', max_length=20, null=True, blank=True, choices=[(b'Pending', b'Pending'), (b'Aproved', b'Authorize'), (b'Declined', b'Decline')])),
                ('branch', models.ForeignKey(related_name='branch_propfac_inspections', to='offices.Branch')),
                ('created_by', models.ForeignKey(related_name='user_officeinspections', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('floor', models.ForeignKey(related_name='floor_propfac_inspections', to='offices.Floor')),
                ('inspector', models.ForeignKey(related_name='inspector_propfac_inspections', to='employees.Employee')),
                ('modified_by', models.ForeignKey(related_name='user_modified_officeinspections', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('section', models.ForeignKey(related_name='section_propfac_inspections', to='offices.Section')),
            ],
        ),
        migrations.CreateModel(
            name='PFComment',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('comments', models.CharField(default=None, max_length=2000)),
                ('commented', models.DateTimeField(auto_now_add=True)),
                ('comment_type', models.CharField(default=None, max_length=120, null=True, blank=True)),
                ('obj_id', models.IntegerField(null=True, blank=True)),
                ('branch', models.ForeignKey(related_name='branch_propfac_comments', blank=True, to='offices.Branch', null=True)),
                ('created_by', models.ForeignKey(related_name='user_propfac_comments', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PFDocument',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('file_name', models.CharField(max_length=255, blank=True)),
                ('file', models.FileField(upload_to=b'uploads/property')),
                ('obj_id', models.CharField(default=None, max_length=20, null=True, blank=True)),
                ('obj_type', models.CharField(default=None, max_length=50, null=True, blank=True)),
                ('date_uploaded', models.DateTimeField(auto_now_add=True)),
                ('branch', models.ForeignKey(related_name='branch_propfac_documents', to='offices.Branch')),
                ('created_by', models.ForeignKey(related_name='user_pfdocuments', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PFRequisition',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('quote_number', models.CharField(default=None, max_length=120)),
                ('obj_id', models.IntegerField(null=True, blank=True)),
                ('requisition_type', models.CharField(default=None, max_length=120)),
                ('description', models.CharField(default=None, max_length=2000, null=True, blank=True)),
                ('requested', models.DateTimeField(auto_now_add=True)),
                ('supplier', models.CharField(default=None, max_length=120)),
                ('vat_included', models.BooleanField(default=True)),
                ('branch', models.ForeignKey(related_name='branches_propfac_requisitions', to='offices.Branch')),
                ('created_by', models.ForeignKey(related_name='user_pfrequisitions', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('modified_by', models.ForeignKey(related_name='user_modified_pfrequisitions', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('requested_by', models.ForeignKey(related_name='employee_propfac_requisitions', to='employees.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='PFRequisitionItem',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('item_code', models.CharField(default=None, max_length=200, null=True, blank=True)),
                ('line_item', models.CharField(default=None, max_length=200, null=True, blank=True)),
                ('qty', models.IntegerField(null=True, blank=True)),
                ('unit_price', models.FloatField(default=0, max_length=20, null=True, blank=True)),
                ('line_total', models.FloatField(default=0, max_length=20, null=True, blank=True)),
                ('created_by', models.ForeignKey(related_name='user_pfrequisitionitems', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('modified_by', models.ForeignKey(related_name='user_modified_pfrequisitionitems', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('requisition_no', models.ForeignKey(related_name='requisition_requistionItems', to='propfac.PFRequisition')),
            ],
        ),
        migrations.CreateModel(
            name='PropertyMaintenance',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('maint_date', models.DateField(null=True, blank=True)),
                ('maintenance_type', models.CharField(default=None, max_length=20, null=True, blank=True, choices=[(b'General', b'General'), (b'Air Conditioning', b'Air Conditioning'), (b'Electrical', b'Elecriical'), (b'Floor Capets and Tiling', b'Floor Capets and Tiling'), (b'Plumbing', b'Plumbing'), (b'Security', b'Security'), (b'Walls And Partitioning', b'Walls And Partitioning')])),
                ('description', models.CharField(default=None, max_length=2000, null=True, blank=True)),
                ('projected_cost', models.FloatField(default=0, max_length=20, null=True, blank=True)),
                ('actual_cost', models.FloatField(default=0, max_length=20, null=True, blank=True)),
                ('difference', models.FloatField(default=0, max_length=20, null=True, blank=True)),
                ('invoice_number', models.CharField(default=None, max_length=200, null=True, blank=True)),
                ('service_provider', models.CharField(default=None, max_length=200, null=True, blank=True)),
                ('status', models.CharField(default=None, max_length=20, null=True, blank=True, choices=[(b'Good Condition', b'Good Condition'), (b'Minor Damages', b'Minor Damages'), (b'Major Damages', b'Major Damages'), (b'Write Off', b'Write Off')])),
                ('accept', models.BooleanField(default=False)),
                ('authorize', models.CharField(default=b'Pending', max_length=20, null=True, blank=True, choices=[(b'Pending', b'Pending'), (b'Aproved', b'Authorize'), (b'Declined', b'Decline')])),
                ('branch', models.ForeignKey(related_name='branch_building_maintenance', to='offices.Branch')),
                ('created_by', models.ForeignKey(related_name='user_propertymaintenance', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('modified_by', models.ForeignKey(related_name='user_modified_propertymaintenance', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ToiletInspection',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('toilet', models.CharField(default=None, max_length=20, null=True, blank=True, choices=[(b'gents', b'Gents'), (b'ladies', b'Ladies')])),
                ('date_checked', models.DateField(null=True, blank=True)),
                ('time_checked', models.TimeField(null=True, blank=True)),
                ('walls_and_covering', models.BooleanField(default=False)),
                ('windows_and_handles', models.BooleanField(default=False)),
                ('ceiling', models.BooleanField(default=False)),
                ('lights_and_switches', models.BooleanField(default=False)),
                ('doors_and_hanles', models.BooleanField(default=False)),
                ('air_extractor', models.BooleanField(default=False)),
                ('seat_and_cover', models.BooleanField(default=False)),
                ('urinary', models.BooleanField(default=False)),
                ('water_dispenser', models.BooleanField(default=False)),
                ('washing_basin', models.BooleanField(default=False)),
                ('taps', models.BooleanField(default=False)),
                ('towel_dispencer', models.BooleanField(default=False)),
                ('detegent_dispencer', models.BooleanField(default=False)),
                ('mirror', models.BooleanField(default=False)),
                ('furniture', models.BooleanField(default=False)),
                ('fire_extinguisher', models.BooleanField(default=False)),
                ('shelving', models.BooleanField(default=False)),
                ('status', models.CharField(default=None, max_length=20, null=True, blank=True, choices=[(b'Good Condition', b'Good Condition'), (b'Minor Damages', b'Minor Damages'), (b'Major Damages', b'Major Damages')])),
                ('accept', models.BooleanField(default=False)),
                ('authorize', models.CharField(default=b'Pending', max_length=20, null=True, blank=True, choices=[(b'Pending', b'Pending'), (b'Aproved', b'Authorize'), (b'Declined', b'Decline')])),
                ('branch', models.ForeignKey(related_name='branch_propfac_toilet_inspection', to='offices.Branch')),
                ('created_by', models.ForeignKey(related_name='user_toiletinspections', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('floor', models.ForeignKey(related_name='floor_propfac_toilet_inspection', to='offices.Floor')),
                ('inspector', models.ForeignKey(related_name='inspector_propfac_toilet_inspection', to='employees.Employee')),
                ('modified_by', models.ForeignKey(related_name='user_modified_toiletinspections', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='historicalpfrequisitionitem',
            name='requisition_no',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='propfac.PFRequisition', null=True),
        ),
    ]
