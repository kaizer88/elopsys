# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import django.db.models.deletion
from django.conf import settings


class Migration(migrations.Migration):

    dependencies = [
        ('employees', '0001_initial'),
        ('offices', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BranchStock',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('quantity', models.FloatField(default=0, max_length=20, null=True, blank=True)),
                ('reorder_quantity', models.FloatField(default=0, max_length=20, null=True, blank=True)),
                ('branch', models.ForeignKey(related_name='branch_branchstockitems', to='offices.Branch')),
                ('created_by', models.ForeignKey(related_name='user_branchstocktems', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalBranchStock',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('quantity', models.FloatField(default=0, max_length=20, null=True, blank=True)),
                ('reorder_quantity', models.FloatField(default=0, max_length=20, null=True, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('branch', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='offices.Branch', null=True)),
                ('created_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical branch stock',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSTComment',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('comments', models.CharField(default=None, max_length=2000)),
                ('commented', models.DateTimeField(editable=False, blank=True)),
                ('comment_type', models.CharField(default=None, max_length=120, null=True, blank=True)),
                ('obj_id', models.IntegerField(null=True, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('branch', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='offices.Branch', null=True)),
                ('created_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical st comment',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSTDocument',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('file_name', models.CharField(max_length=255, blank=True)),
                ('file', models.TextField(max_length=100)),
                ('obj_id', models.CharField(default=None, max_length=20, null=True, blank=True)),
                ('obj_type', models.CharField(default=None, max_length=50, null=True, blank=True)),
                ('date_uploaded', models.DateTimeField(editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('branch', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='offices.Branch', null=True)),
                ('created_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical st document',
            },
        ),
        migrations.CreateModel(
            name='HistoricalStockItem',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('item_name', models.CharField(default=None, max_length=200, null=True, blank=True)),
                ('item_code', models.CharField(default=None, max_length=200, null=True, blank=True)),
                ('category', models.CharField(default=b'Operational', max_length=20, null=True, blank=True, choices=[(b'grocery', b'Grocery'), (b'sanitation', b'Sanitation'), (b'stationary', b'Stationary')])),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('created_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('modified_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical stock item',
            },
        ),
        migrations.CreateModel(
            name='HistoricalStockReplenishment',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('quantity', models.FloatField(default=0, max_length=20, null=True, blank=True)),
                ('date_replenished', models.DateField(null=True, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('branch', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='offices.Branch', null=True)),
                ('created_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical stock replenishment',
            },
        ),
        migrations.CreateModel(
            name='HistoricalStockTake',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('quantity', models.FloatField(default=0, max_length=20, null=True, blank=True)),
                ('date_checked', models.DateField(null=True, blank=True)),
                ('time_checked', models.TimeField(null=True, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('branch', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='offices.Branch', null=True)),
                ('checker', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='employees.Employee', null=True)),
                ('created_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('floor', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='offices.Floor', null=True)),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical stock take',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSTRequisition',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('quote_number', models.CharField(default=None, max_length=120)),
                ('obj_id', models.IntegerField(null=True, blank=True)),
                ('requisition_type', models.CharField(default=None, max_length=120)),
                ('description', models.CharField(default=None, max_length=2000, null=True, blank=True)),
                ('requested', models.DateTimeField(editable=False, blank=True)),
                ('supplier', models.CharField(default=None, max_length=120)),
                ('vat_included', models.BooleanField(default=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('branch', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='offices.Branch', null=True)),
                ('created_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('modified_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('requested_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='employees.Employee', null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical st requisition',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSTRequisitionItem',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('item_code', models.CharField(default=None, max_length=200, null=True, blank=True)),
                ('line_item', models.CharField(default=None, max_length=200, null=True, blank=True)),
                ('qty', models.IntegerField(null=True, blank=True)),
                ('unit_price', models.FloatField(default=0, max_length=20, null=True, blank=True)),
                ('line_total', models.FloatField(default=0, max_length=20, null=True, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('created_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('modified_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical st requisition item',
            },
        ),
        migrations.CreateModel(
            name='STComment',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('comments', models.CharField(default=None, max_length=2000)),
                ('commented', models.DateTimeField(auto_now_add=True)),
                ('comment_type', models.CharField(default=None, max_length=120, null=True, blank=True)),
                ('obj_id', models.IntegerField(null=True, blank=True)),
                ('branch', models.ForeignKey(related_name='branch_stock_comments', blank=True, to='offices.Branch', null=True)),
                ('created_by', models.ForeignKey(related_name='user_stock_comments', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='STDocument',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('file_name', models.CharField(max_length=255, blank=True)),
                ('file', models.FileField(upload_to=b'uploads/property')),
                ('obj_id', models.CharField(default=None, max_length=20, null=True, blank=True)),
                ('obj_type', models.CharField(default=None, max_length=50, null=True, blank=True)),
                ('date_uploaded', models.DateTimeField(auto_now_add=True)),
                ('branch', models.ForeignKey(related_name='branch_stock_document', to='offices.Branch')),
                ('created_by', models.ForeignKey(related_name='user_stock_document', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StockItem',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('item_name', models.CharField(default=None, max_length=200, null=True, blank=True)),
                ('item_code', models.CharField(default=None, max_length=200, null=True, blank=True)),
                ('category', models.CharField(default=b'Operational', max_length=20, null=True, blank=True, choices=[(b'grocery', b'Grocery'), (b'sanitation', b'Sanitation'), (b'stationary', b'Stationary')])),
                ('created_by', models.ForeignKey(related_name='user_stockitems', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('modified_by', models.ForeignKey(related_name='user_modified_stockitems', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StockReplenishment',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('quantity', models.FloatField(default=0, max_length=20, null=True, blank=True)),
                ('date_replenished', models.DateField(null=True, blank=True)),
                ('branch', models.ForeignKey(related_name='branch_stockreplenishments', to='offices.Branch')),
                ('created_by', models.ForeignKey(related_name='user_stockreplenishments', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('item', models.ForeignKey(related_name='item_stockreplenishmennts', to='stock.StockItem')),
                ('modified_by', models.ForeignKey(related_name='user_modified_stockreplenishments', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('replenisher', models.ForeignKey(related_name='checker_stockreplenishments', to='employees.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='StockTake',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('quantity', models.FloatField(default=0, max_length=20, null=True, blank=True)),
                ('date_checked', models.DateField(null=True, blank=True)),
                ('time_checked', models.TimeField(null=True, blank=True)),
                ('branch', models.ForeignKey(related_name='branch_stocktakes', to='offices.Branch')),
                ('checker', models.ForeignKey(related_name='checker_stocktakes', to='employees.Employee')),
                ('created_by', models.ForeignKey(related_name='user_stocktakes', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('floor', models.ForeignKey(related_name='floor_stocktakes', to='offices.Floor')),
                ('item', models.ForeignKey(related_name='item_stocktakes', to='stock.StockItem')),
                ('modified_by', models.ForeignKey(related_name='user_modified_stocktakes', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='STRequisition',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('quote_number', models.CharField(default=None, max_length=120)),
                ('obj_id', models.IntegerField(null=True, blank=True)),
                ('requisition_type', models.CharField(default=None, max_length=120)),
                ('description', models.CharField(default=None, max_length=2000, null=True, blank=True)),
                ('requested', models.DateTimeField(auto_now_add=True)),
                ('supplier', models.CharField(default=None, max_length=120)),
                ('vat_included', models.BooleanField(default=True)),
                ('branch', models.ForeignKey(related_name='branches_stock_requisitions', to='offices.Branch')),
                ('created_by', models.ForeignKey(related_name='user_stock_requisitions', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('modified_by', models.ForeignKey(related_name='user_modified_stock_rerequisitions', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('requested_by', models.ForeignKey(related_name='employee_stock_requisitions', to='employees.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='STRequisitionItem',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('item_code', models.CharField(default=None, max_length=200, null=True, blank=True)),
                ('line_item', models.CharField(default=None, max_length=200, null=True, blank=True)),
                ('qty', models.IntegerField(null=True, blank=True)),
                ('unit_price', models.FloatField(default=0, max_length=20, null=True, blank=True)),
                ('line_total', models.FloatField(default=0, max_length=20, null=True, blank=True)),
                ('created_by', models.ForeignKey(related_name='user_stock_requisitionitems', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('modified_by', models.ForeignKey(related_name='user_modified_stock_rerequisitionitems', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('requisition_no', models.ForeignKey(related_name='requisition_stock_requistionItems', to='stock.STRequisition')),
            ],
        ),
        migrations.AddField(
            model_name='historicalstrequisitionitem',
            name='requisition_no',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='stock.STRequisition', null=True),
        ),
        migrations.AddField(
            model_name='historicalstocktake',
            name='item',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='stock.StockItem', null=True),
        ),
        migrations.AddField(
            model_name='historicalstocktake',
            name='modified_by',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to=settings.AUTH_USER_MODEL, null=True),
        ),
        migrations.AddField(
            model_name='historicalstockreplenishment',
            name='item',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='stock.StockItem', null=True),
        ),
        migrations.AddField(
            model_name='historicalstockreplenishment',
            name='modified_by',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to=settings.AUTH_USER_MODEL, null=True),
        ),
        migrations.AddField(
            model_name='historicalstockreplenishment',
            name='replenisher',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='employees.Employee', null=True),
        ),
        migrations.AddField(
            model_name='historicalbranchstock',
            name='item',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='stock.StockItem', null=True),
        ),
        migrations.AddField(
            model_name='historicalbranchstock',
            name='modified_by',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to=settings.AUTH_USER_MODEL, null=True),
        ),
        migrations.AddField(
            model_name='branchstock',
            name='item',
            field=models.ForeignKey(related_name='item_branchstockitems', to='stock.StockItem'),
        ),
        migrations.AddField(
            model_name='branchstock',
            name='modified_by',
            field=models.ForeignKey(related_name='user_modified_branchstocktems', blank=True, to=settings.AUTH_USER_MODEL, null=True),
        ),
    ]
